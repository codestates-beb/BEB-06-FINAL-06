import React,{useState} from 'react'

import './TokenSwap.css'
import { useRecoilState } from "recoil";
import { userState } from '../../recoil/user/atom';
import { Login } from '../../recoil/user/atom';
const TokenSwap = () => {
    const [user, setUser] = useRecoilState(userState)   // recoil user ÏÑ†Ïñ∏
    const [isLogin, setIsLogin] = useRecoilState(Login) // recoil user login ÏÑ†Ïñ∏

    const [direction, setDirection] = useState(false)   // Ïä§Ïôë Î∞©Ìñ•
    const [jtAmountChange, SetJtAmountChange] = useState() // Ïä§Ïôë JT ÏûÖÎ†•Í∞í
    const [ethAmountChange, SetEthAmountChange] = useState() // Ïä§Ïôë ETH ÏûÖÎ†•Í∞í
    const [isPage, setIsPage] = useState("swap")    // ÌéòÏù¥ÏßÄ Íµ¨Î∂Ñ


    const [jtSteakingChange, setJtSteakingChange] = useState();

    // ÏÉÅÎã® ÌÉ≠ : Ïä§Ïôë ÌÅ¥Î¶≠
    const setPageSwap =() =>{
        setIsPage('swap')
        console.log(isPage)
    }
    // ÏÉÅÎã® ÌÉ≠ : Ïä§ÌÖåÏù¥ÌÇπ ÌÅ¥Î¶≠
    const setPageSteaking = () => {
        setIsPage('steaking')
        console.log(isPage)
    }
    // Ïä§Ïôë : JT input ÏûÖÎ†•Í∞í
    const onChangeJtAmount = (e) => {
        SetJtAmountChange(e.target.value)
    }
    // Ïä§Ïôë : ETH input ÏûÖÎ†•Í∞í
    const onChangeEthAmount = (e) => {
        SetEthAmountChange(e.target.value)
    }
    // Ïä§ÌÖåÏù¥ÌÇπ : JT input ÏûÖÎ†•Í∞í
    const onChangeJtSteaking = (e) => {
        setJtSteakingChange(e.target.value)
    }

    // Î∞©Ìñ•Î≥ÄÍ≤Ω Î≤ÑÌäº ÌÅ¥Î¶≠
    const DirectionChange = () => {
        setDirection(!direction)
        document.getElementsByClassName('TokenSwapPage_Swap-input').value = ''; 
        SetJtAmountChange('')
        SetEthAmountChange('')
        
    }

    // ÌÜ†ÌÅ∞ Ïä§Ïôë ÎèôÏûë Ïã§Ìñâ
    const Swap = () => {    
        console.log(direction)
        if(direction){
        // direction = true Ïùº Í≤ΩÏö∞ ETH -> JT ÍµêÌôò 
            console.log(`ethAmountChange : ${ethAmountChange}`)
        }else{
            // direction = false Ïùº Í≤ΩÏö∞ JT -> ETH ÍµêÌôò
            if(jtAmountChange <= 0){
                alert('0Î≥¥Îã§ ÌÅ∞ ÏàòÎ•º ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî')
            }
            else if(user.user_token1amount < jtAmountChange){
                alert('JT TokenÏùò ÏàòÎüâÏù¥ Î∂ÄÏ°±Ìï©ÎãàÎã§.')
            }
            else{
                console.log(`jtAmountChange : ${jtAmountChange}`)
            }
            
        }
    }

    // Ïä§ÌÖåÏù¥ÌÇπ Î≤ÑÌäº ÌÅ¥Î¶≠Ïãú
    const Steaking = () => {
        if(jtSteakingChange <= 0){
            alert('0Î≥¥Îã§ ÌÅ∞ ÏàòÎ•º ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî')
        }
        else if(user.user_token2amount < jtSteakingChange ){
            alert('JTT TokenÏùò ÏàòÎüâÏù¥ Î∂ÄÏ°±Ìï©ÎãàÎã§.')
        }
        else{
            console.log(jtSteakingChange)
        }

        
    }

    // Ïä§ÌÖåÏù¥ÌÇπ Î≥¥ÏÉÅ Î≤ÑÌäº ÌÅ¥Î¶≠Ïãú
    const SteakingRewards = () => {
        
    }

    return (
        <div className='TokenSwap'>
            <div className='TokenSwapPage'>
                {/* ÏÉÅÎã® ÌÉ≠ */}
                <div className='TokenSwapPage_Tap'>
                    <div onClick={setPageSwap}>
                        ÌÜ†ÌÅ∞ Ïä§Ïôë
                    </div>
                    <div onClick={setPageSteaking}>
                        ÌÜ†ÌÅ∞ Ïä§ÌÖåÏù¥ÌÇπ
                    </div>
                </div>
                {/* Î≥∏Î¨∏ÎÇ¥Ïö©  */}
                {/* ÌÜ†ÌÅ∞ Ïä§Ïôë Î∂ÄÎ∂Ñ */}
                <div className='TokenSwapPage_Content' hidden={isPage != 'swap'} >
                    {/* Ìó§Îçî  */}
                    <div className='TokenSwapPage_Content-container'>
                        <div className='TokenSwapPage_Content-container-title'>
                            ÍµêÌôò ÎπÑÏú® (1:1)
                        </div>
                        <div className='TokenSwapPage_Content-containe-content'>

                        {direction ?    
                            <div className='TokenSwapPage_Content-containe-content-text'>
                                <span>ETH : {ethAmountChange} &nbsp;&nbsp;üëâ&nbsp;&nbsp; </span>
                                <span>JT : {ethAmountChange} </span>
                            </div> 
                            :
                            <div className='TokenSwapPage_Content-containe-content-text'>
                                <span>JT : {jtAmountChange} &nbsp;&nbsp;üëâ&nbsp;&nbsp; </span>
                                <span>ETH : {jtAmountChange} </span>
                            </div> 

                        }
                        </div>
                    </div>
  
                    {/* ÏûÖÎ†• */}
                    <div className='TokenSwapPage_Content-container'>
                        <div className='TokenSwapPage_Content-container-title'>
                            ÏûÖÎ†•
                        </div>
                        <div className='TokenSwapPage_Content-containe-content'>
                           {direction ? 
                           <div>
                                <input type='number' className='TokenSwapPage_Swap-input' placeholder='ETH ÏûÖÎ†•' onChange={onChangeEthAmount} value={ethAmountChange}/>
                                {/* <span>To </span> */}
                                {/* <span> JT : {ethAmountChange}</span> */}
                           </div>:
                           <div>
                                <input type='number' className='TokenSwapPage_Swap-input' placeholder='JT ÏûÖÎ†•' onChange={onChangeJtAmount} value={jtAmountChange} />
                                {/* <span>To </span> */}
                                {/* <span> ETH : {jtAmountChange}</span> */}
                            </div>
                            }
                        </div>
                        
                        {/* Î≤ÑÌäº */}
                        <div className='TokenSwapPage_Content-containe-content-btn'>
                            <button className='btn-Shape btn-Size-small' onClick={DirectionChange}>Î∞©Ìñ•Î≥ÄÍ≤Ω</button>
                            <button className='btn-Shape btn-Size-small'onClick={Swap}>Ïä§Ïôë</button>
                        </div>
                    </div>
                </div>
                {/* ÌÜ†ÌÅ∞ Ïä§ÌÖåÏù¥ÌÇπ Î∂ÄÎ∂Ñ */}
                <div className='TokenSwapPage_Content' hidden={isPage != 'steaking'} >
                    <div className='TokenSwapPage_Content-container'>
                        <div className='TokenSwapPage_Content-container-title'>
                            Ïä§ÌÖåÏù¥ÌÇπ (1:10)
                        </div>
                        <div className='TokenSwapPage_Content-containe-content'>
                            <input type='number' className='TokenSwapPage_Swap-input' placeholder='Ïä§ÌÖåÏù¥ÌÇπÌï† JT ÏàòÎüâÏùÑ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî.' onChange={onChangeJtSteaking} value={jtSteakingChange}/>
                            <span>JT </span> <br/>
                        </div>
                        <div className='TokenSwapPage_Content-containe-content-btn'>
                            <button className='btn-Shape btn-Size-small' onClick={Steaking}> Ïä§ÌÖåÏù¥ÌÇπ </button>
                        </div>
                    </div>
                    <div className='TokenSwapPage_Content-container'>
                        <div className='TokenSwapPage_Content-container-title'>
                            Î≥¥ÏÉÅ
                        </div>
                        <div className='TokenSwapPage_Content-containe-content'>
                            {/* <input className='TokenSwapPage_Swap-input' placeholder='Ïä§ÌÖåÏù¥ÌÇπÌï† JT ÏàòÎüâÏùÑ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî.' onChange={onChangeEthAmount} value={ethAmountChange}/> */}
                            <span>Ïä§ÌÖåÏù¥ÌÇπ JTT : 100 </span> <br/>
                            <span>Î≥¥ÏÉÅ JT : 10 </span> <br/>
                        </div>
                        <div className='TokenSwapPage_Content-containe-content-btn'>
                            <button className='btn-Shape btn-Size-small' onClick={SteakingRewards}> Î≥¥ÏÉÅÎ∞õÍ∏∞ </button>
                        </div>
                    </div>
                </div>

            </div>

        </div>
    )
}

export default TokenSwap